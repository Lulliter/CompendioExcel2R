[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site ´"
  },
  {
    "objectID": "content/01-content.html",
    "href": "content/01-content.html",
    "title": "Evaluation and the causal revolution",
    "section": "",
    "text": "The syllabus, content, examples, and assignments pages for this class\n Chapter 1 in Impact Evaluation in Practice (wb-eval?)\n Chapters 1 and 2 in The Effect (Huntington-Klein:2021?)\n DJ Patil, “What Makes a Radical and Revolutionary Technology?”\n\n(DJ Patil is the former Chief Data Scientist of the United States under President Obama. He gave this forum address at Brigham Young University on February 13, 2018.)\n\n Stephen Goldsmith, “Next Generation of Public Employees Must Understand Data and Policy”\n Hadley Wickham, “Data Science: How is it Different To Statistics?”"
  },
  {
    "objectID": "content/01-content.html#readings",
    "href": "content/01-content.html#readings",
    "title": "Evaluation and the causal revolution",
    "section": "",
    "text": "The syllabus, content, examples, and assignments pages for this class\n Chapter 1 in Impact Evaluation in Practice (wb-eval?)\n Chapters 1 and 2 in The Effect (Huntington-Klein:2021?)\n DJ Patil, “What Makes a Radical and Revolutionary Technology?”\n\n(DJ Patil is the former Chief Data Scientist of the United States under President Obama. He gave this forum address at Brigham Young University on February 13, 2018.)\n\n Stephen Goldsmith, “Next Generation of Public Employees Must Understand Data and Policy”\n Hadley Wickham, “Data Science: How is it Different To Statistics?”"
  },
  {
    "objectID": "content/01-content.html#slides",
    "href": "content/01-content.html#slides",
    "title": "Evaluation and the causal revolution",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\nWarning\n\n\n\nImportant!!: In the “Class details” video, I say that there are three books for the class: the World Bank evaluation book, ’Metrics Matter, and Causal Inference: The Mixtape. That’s not the case this semester, since we’re using the new The Effect book, which replaces both ’Metrics Matter and the Mixtape. So ignore that part of the video. The slides are updated with the correct books, though: see here.\n\n\nThe slides for today’s lesson are available online as an HTML file. Use the buttons below to open the slides either as an interactive website or as a static PDF (for printing or storing for later). You can also click in the slides below and navigate through them with your left and right arrow keys.\n\n View all slides in new window  Download PDF of all slides\n\n\n\nIntroduction\n\n\nData science and public service\n\n\nEvidence, evaluation, and causation (1)\n\n\nEvidence, evaluation, and causation (2)\n\n\nClass details\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFun fact: If you type ? (or shift + /) while going through the slides, you can see a list of special slide-specific commands."
  },
  {
    "objectID": "content/01-content.html#videos",
    "href": "content/01-content.html#videos",
    "title": "Evaluation and the causal revolution",
    "section": "Videos",
    "text": "Videos\n\n\n\n\n\n\nWarning\n\n\n\nImportant!!: In the “Class details” video, I say that there are three books for the class: the World Bank evaluation book, ’Metrics Matter, and Causal Inference: The Mixtape. That’s not the case this semester, since we’re using the new The Effect book, which replaces both ’Metrics Matter and the Mixtape. So ignore that part of the video. The slides are updated with the correct books, though: see here.\n\n\nVideos for each section of the lecture are available at this YouTube playlist.\n\nIntroduction\nData science and public service\nEvidence, evaluation, and causation (1)\nEvidence, evaluation, and causation (2)\nClass details\n\nYou can also watch the playlist (and skip around to different sections) here:"
  },
  {
    "objectID": "content/01-content.html#in-class-stuff",
    "href": "content/01-content.html#in-class-stuff",
    "title": "Evaluation and the causal revolution",
    "section": "In-class stuff",
    "text": "In-class stuff\nHere are all the materials we’ll use in class:\n\nSession 1 in-person slides (PDF)\n\nRStudio labs:\n\nRStudio.cloud project\nProject .zip file\nLab slides 1: Markdown and universal writing (PDF)\nLab slides 2: Getting started with R and RStudio (PDF)\nLab slides 3: Data basics (PDF)\nLab slides 4: Visualize data with ggplot2 (PDF)\nLab slides 5: Transform data with dplyr (PDF)"
  },
  {
    "objectID": "content/02-content.html",
    "href": "content/02-content.html",
    "title": "Regression and inference",
    "section": "",
    "text": "Chapters 3 and 4 in The Effect (Huntington-Klein:2021?)"
  },
  {
    "objectID": "content/02-content.html#readings",
    "href": "content/02-content.html#readings",
    "title": "Regression and inference",
    "section": "",
    "text": "Chapters 3 and 4 in The Effect (Huntington-Klein:2021?)"
  },
  {
    "objectID": "content/02-content.html#recommended-readings",
    "href": "content/02-content.html#recommended-readings",
    "title": "Regression and inference",
    "section": "Recommended readings",
    "text": "Recommended readings\nLook through your notes on regression from your last stats class. Also, you can skim through these resources:\n\n 5.1–5.4 in ModernDive (IsmayKim:2018?)\n 6.1–6.4 in ModernDive (IsmayKim:2018?)\n 7.1–7.3 in OpenIntro Statistics (DiezBarrCetinkaya-Rundel:2017?)\n 8.1 in OpenIntro Statistics (DiezBarrCetinkaya-Rundel:2017?)\n\nWe’ll review all this regression stuff in the videos, so don’t panic if this all looks terrifying! Also, take advantage of the videos that accompany the OpenIntro chapters. And also, the OpenIntro chapters are heavier on the math—don’t worry if you don’t understand everything."
  },
  {
    "objectID": "content/02-content.html#slides",
    "href": "content/02-content.html#slides",
    "title": "Regression and inference",
    "section": "Slides",
    "text": "Slides\nThe slides for today’s lesson are available online as an HTML file. Use the buttons below to open the slides either as an interactive website or as a static PDF (for printing or storing for later). You can also click in the slides below and navigate through them with your left and right arrow keys.\n\n View all slides in new window  Download PDF of all slides\n\n\n\nIntroduction\n\n\nDrawing lines\n\n\nLines, Greek, and regression\n\n\nNull worlds and statistical significance\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nFun fact: If you type ? (or shift + /) while going through the slides, you can see a list of special slide-specific commands."
  },
  {
    "objectID": "content/02-content.html#videos",
    "href": "content/02-content.html#videos",
    "title": "Regression and inference",
    "section": "Videos",
    "text": "Videos\nVideos for each section of the lecture are available at this YouTube playlist.\n\nIntroduction\nDrawing lines\nLines, Greek, and regression\nNull worlds and statistical significance\n\nYou can also watch the playlist (and skip around to different sections) here:"
  },
  {
    "objectID": "content/02-content.html#in-class-stuff",
    "href": "content/02-content.html#in-class-stuff",
    "title": "Regression and inference",
    "section": "In-class stuff",
    "text": "In-class stuff\nHere are all the materials we’ll use in class:\n\nSession 2 FAQ slides (PDF)\nErrors vs. warnings vs. messages (i.e. what to do when R shows you red text)\nR Markdown examples:\n\nQuarto!\nExample R Markdown file used as a code-through or step-by-step teaching document:\n\nLots of blog posts here\nJulia Silge, “Modeling human/computer interactions on Star Trek from #TidyTuesday with workflowsets”\nBob Rudis, “Some Covid Donuts To End The Week”\nHolger K. von Jouanne-Diedrich, “The “Youth Bulge” of Afghanistan: The Hidden Force behind Political Instability”\n\nExample R Markdown file used as a publicly-consumable document:\n\nClick on the “Manuscript” menu item at this site\nSee the Rmd file here\n\n\n\nHands-on R materials:\n\n Posit.cloud project\n Project .zip file\n Gapminder data\nLab slides 1: Markdown and universal writing (PDF)\nLab slides 2: Getting started with R and RStudio (PDF)\nLab slides 3: Data basics (PDF)\nLab slides 4: Visualize data with ggplot2 (PDF)\nLab slides 5: Transform data with dplyr (PDF)"
  },
  {
    "objectID": "content/02-content.html#bayesian-statistics-resources",
    "href": "content/02-content.html#bayesian-statistics-resources",
    "title": "Regression and inference",
    "section": "Bayesian statistics resources",
    "text": "Bayesian statistics resources\nIn class I briefly mentioned the difference between frequentist and Bayesian statistics. You can see a bunch of additional resources and examples of these two approaches to statistics here. This huge blog post also shows how to do multilevel models with Bayesian models."
  },
  {
    "objectID": "content/index.html",
    "href": "content/index.html",
    "title": "Readings, lectures, and videos",
    "section": "",
    "text": "Each class session has a set of required readings that you should complete before watching the lecture.\nEvery class session also has a YouTube playlist of short recorded videos for each of the lecture sections. The lecture slides are special HTML files made with the R package xaringan (R can do so much!). On each class session page you’ll see buttons for opening the presentation in a new tab or for downloading a PDF of the slides in case you want to print them or store them on your computer:\n\n View all slides in new window  Download PDF of all slides\n\nThe slides are also embedded on each page. You can click in the slides and navigate through them with ← and →. If you type ? (or shift + /) while viewing the slides you can see a list of slide-specific commands (like f for fullscreen or p for presenter mode if you want to see my notes)."
  },
  {
    "objectID": "example/dags.html",
    "href": "example/dags.html",
    "title": "DAGs",
    "section": "",
    "text": "The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use dagitty.net.\nThis video shows how to use it:"
  },
  {
    "objectID": "example/dags.html#dags-with-dagitty.net",
    "href": "example/dags.html#dags-with-dagitty.net",
    "title": "DAGs",
    "section": "",
    "text": "The easiest way to quickly build DAGs and find adjustment sets and testable implications is to use dagitty.net.\nThis video shows how to use it:"
  },
  {
    "objectID": "example/dags.html#dags-with-r-ggdag-and-dagitty",
    "href": "example/dags.html#dags-with-r-ggdag-and-dagitty",
    "title": "DAGs",
    "section": "DAGs with R, ggdag, and dagitty",
    "text": "DAGs with R, ggdag, and dagitty\nYou can use the ggdag and dagitty packages in R to build and work with DAGs too. I typically draw an initial DAG in my browser with dagitty.net and then I rewrite it in code in R so that it’s more official and formal and reproducible.\n\nLive coding example\n\n\n\n\n\n\nBasic DAGs\n(This is a heavily cleaned up and annotated version of the code from the video.)\n\n# Load packages\nlibrary(tidyverse)  # For dplyr, ggplot, and friends\nlibrary(ggdag)      # For plotting DAGs\nlibrary(dagitty)    # For working with DAG logic\n\nThe general process for making and working with DAGs in R is to create a DAG object with dagify() and then plot it with ggdag(). The documentation for ggdag is really good and helpful and full of examples. Check these pages for all sorts of additional details:\n\n“An introduction to ggdag”\n“An introduction to directed acyclic graphs”\nList of all ggdag-related functions\n\nThe syntax for dagify() is similar to the formula syntax you’ve been using for building regression models with lm(). The formulas you use in dagify() indicate the relationships between nodes.\nFor instance, in this DAG, y is caused by x, a, and b (y ~ x + a + b), and x is caused by a and b (x ~ a + b). This means that a and b are confounders. Use the exposure and outcome arguments to specify which nodes are the exposure (or treatment/intervention/program) and the outcome.\n\n# Create super basic DAG\nsimple_dag &lt;- dagify(\n  y ~ x + a + b,\n  x ~ a + b,\n  exposure = \"x\",\n  outcome = \"y\"\n)\n\n# Adding a theme_dag() layer to the plot makes it have a white background with no axis labels\nggdag(simple_dag) +\n  theme_dag()\n\n\n\n\n\n\n\n\nIf you want to plot which nodes are the exposure and outcome, use ggdag_status() instead:\n\nggdag_status(simple_dag) +\n  theme_dag()\n\n\n\n\n\n\n\n\n\n\nLayouts and manual coordinates\nNotice how the layout is different in both of those graphs. By default, ggdag() positions the nodes randomly every time using a network algorithm. You can change the algorithm by using the layout argument: ggdag(simple_dag, layout = \"nicely\"). You can see a full list of possible algorithms by running ?layout_tbl_graph_igraph in the console.\nAlternatively, you can specify your own coordinates so that the nodes are positioned in the same place every time. Do this with the coords argument in dagify().\nThe best way to figure out what these numbers should be is to draw the DAG on paper or on a whiteboard and add a grid to it and then figure out the coordinates. For instance, in this DAG there are three rows and three columns: x and y go in the middle row (row 2) while a and b go in the middle column (column 2). It can also be helpful to not include theme_dag() at first so you can see the numbers for the underlying grid. Once you have everything positioned correctly, add theme_dag() to clean it up.\n\nsimple_dag_with_coords &lt;- dagify(\n  y ~ x + a + b,\n  x ~ a + b,\n  exposure = \"x\",\n  outcome = \"y\",\n  coords = list(x = c(x = 1, a = 2, b = 2, y = 3),\n                y = c(x = 2, a = 1, b = 3, y = 2))\n)\n\nggdag_status(simple_dag_with_coords) +\n  theme_dag()\n\n\n\n\n\n\n\n\n\n\nNode names and labels\nThe variable names you use do not have to be limited to just x, y, and other lowercase letters. You can any names you want, as long as there are no spaces.\n\ndag_with_var_names &lt;- dagify(\n  outcome ~ treatment + confounder1 + confounder2,\n  treatment ~ confounder1 + confounder2,\n  exposure = \"treatment\",\n  outcome = \"outcome\"\n)\n\nggdag_status(dag_with_var_names) +\n  theme_dag()\n\n\n\n\n\n\n\n\nHowever, unless you use very short names, it is likely that the text will not fit inside the nodes. To get around this, you can add labels to the nodes using the labels argument in dagify(). Plot the labels by setting use_labels = \"label\" in ggdag(). You can turn off the text in the nodes with text = FALSE in ggdag().\n\ndag_with_coords_and_labels &lt;- dagify(\n  y ~ x + a + b,\n  x ~ a + b,\n  exposure = \"x\",\n  outcome = \"y\",\n  labels = c(y = \"Outcome\", x = \"Treatment\",\n             a = \"Confounder 1\", b = \"Confounder 2\"),\n  coords = list(x = c(x = 1, a = 2, b = 2, y = 3),\n                y = c(x = 2, a = 1, b = 3, y = 2))\n)\n\nggdag_status(dag_with_coords_and_labels,\n             use_labels = \"label\", text = FALSE) +\n  guides(fill = \"none\", color = \"none\") +  # Disable the legend\n  theme_dag()\n\n\n\n\n\n\n\n\n\n\nPaths and adjustment sets\nR can also perform analysis on DAG objects. For example, we can find all the testable implications from the DAG using the impliedConditionalIndependencies() function from the dagitty package. For this simple DAG, there is only one: a should be independent of b. If we had a dataset with columns for each of these variables, we could check if this is true by running cor(a, b) to see if the two are related.\n\nimpliedConditionalIndependencies(simple_dag)\n## a _||_ b\n\nWe can also find all the paths between x and y using the paths() function from the dagitty package. We can see that there are three open paths between x and y:\n\npaths(simple_dag)\n## $paths\n## [1] \"x -&gt; y\"      \"x &lt;- a -&gt; y\" \"x &lt;- b -&gt; y\"\n## \n## $open\n## [1] TRUE TRUE TRUE\n\nThe first open path is fine—we want a single d-connected relationship between treatment and outcome—but the other two indicate that there is confounding from a and b. We can see what each of these paths are with the ggdag_paths() function from the ggdag package:\n\nggdag_paths(simple_dag_with_coords) +\n  theme_dag()\n\n\n\n\n\n\n\n\nInstead of listing out all the possible paths and identifying backdoors by hand, you can use the adjustmentSets() function in the dagitty package to programmatically find all the nodes that need to be adjusted. Here we see that both a and b need to be controlled for to isolate the x -&gt; y relationship.\n\nadjustmentSets(simple_dag)\n## { a, b }\n\nYou can also visualize the adjustment sets with ggdag_adjustment_set() in the ggdag package. Make sure you set shadow = TRUE to draw the arrows coming out of the adjusted nodes—by default, those are not included.\n\nggdag_adjustment_set(simple_dag_with_coords, shadow = TRUE) +\n  theme_dag()\n\n\n\n\n\n\n\n\nR will find minimally sufficient adjustment sets, which includes the fewest number of adjustments needed to close all backdoors between x and y. In this example DAG there was only one set of variables (a and b), but in other situations there could be many possible sets, or none if the causal effect is not identifiable.\n\n\nPlot DAG from dagitty.net with ggdag()\nIf you use dagitty.net to draw a DAG, you’ll notice that it generates some code for you in the model code section:\n\n\n\n\n\n\n\n\n\nYou can copy that dag{ ... } code and paste it into R to define a DAG object rather than use the dagify() function. To do this, use the dagitty() function from the dagitty library and include the whole generated model code in single quotes (''):\n\nmodel_from_dagitty &lt;- dagitty('dag {\nbb=\"0,0,1,1\"\n\"A confounder\" [pos=\"0.809,0.306\"]\n\"Another confounder\" [pos=\"0.810,0.529\"]\n\"Some outcome\" [outcome,pos=\"0.918,0.432\"]\n\"Some treatment\" [exposure,pos=\"0.681,0.426\"]\n\"A confounder\" -&gt; \"Some outcome\"\n\"A confounder\" -&gt; \"Some treatment\"\n\"Another confounder\" -&gt; \"Some outcome\"\n\"Another confounder\" -&gt; \"Some treatment\"\n\"Some treatment\" -&gt; \"Some outcome\"\n}\n')\n\nggdag(model_from_dagitty) +\n  theme_dag()\n\n\n\n\n\n\n\n\nBy default it’s going to look ugly because (1) the node labels don’t fit, and (2) slight differences in the coordinates make it so the nodes don’t perfectly align with each other. To fix coordinate alignment, you can modify the numbers in the generated DAG code. Here I rounded the numbers so that they’re all 0.3, 0.8, etc.\nTo fix the label issue, you can add the use_labels argument like normally. Only here, you can’t specify use_labels = \"label\". Instead, when you specify a DAG using dagitty’s code like this, the column in the underlying dataset that contains the labels is named name, so you need to use use_labels = \"name\".\nOther ggdag() variations like ggdag_status() will still work fine.\n\nmodel_from_dagitty_rounded &lt;- dagitty('dag {\nbb=\"0,0,1,1\"\n\"A confounder\" [pos=\"0.8,0.3\"]\n\"Another confounder\" [pos=\"0.8,0.5\"]\n\"Some outcome\" [outcome,pos=\"0.9,0.4\"]\n\"Some treatment\" [exposure,pos=\"0.7,0.4\"]\n\"A confounder\" -&gt; \"Some outcome\"\n\"A confounder\" -&gt; \"Some treatment\"\n\"Another confounder\" -&gt; \"Some outcome\"\n\"Another confounder\" -&gt; \"Some treatment\"\n\"Some treatment\" -&gt; \"Some outcome\"\n}\n')\n\nggdag_status(model_from_dagitty_rounded, text = FALSE, use_labels = \"name\") +\n  guides(color = \"none\") +  # Turn off legend\n  theme_dag()"
  },
  {
    "objectID": "example/dags.html#mosquito-net-example",
    "href": "example/dags.html#mosquito-net-example",
    "title": "DAGs",
    "section": "Mosquito net example",
    "text": "Mosquito net example\n\nConditional independencies\nYou can test if your stated relationships are correct by looking at the conditional independencies that are implied by the DAG. In dagitty.net, these appear in the sidebar in the “Testable implications” section. To show how this works, we’ll use a simulated dataset that I generated about a fictional mosquito net program. Download the data here if you want to follow along:\n\n mosquito_nets.csv\n\nResearchers are interested in whether using mosquito nets decreases an individual’s risk of contracting malaria. They have collected data from 1,752 households in an unnamed country and have variables related to environmental factors, individual health, and household characteristics. Additionally, this country has a special government program that provides free mosquito nets to households that meet specific requirements: to qualify for the program, there must be more than 4 members of the household, and the household’s monthly income must be lower than $700 a month. Households are not automatically enrolled in the program, and many do not use it. The data is not experimental—researchers have no control over who uses mosquito nets, and individual households make their own choices over whether to apply for free nets or buy their own nets, as well as whether they use the nets if they have them.\n\nmosquito_dag &lt;- dagify(\n  malaria_risk ~ net + income + health + temperature + resistance,\n  net ~ income + health + temperature + eligible + household,\n  eligible ~ income + household,\n  health ~ income,\n  exposure = \"net\",\n  outcome = \"malaria_risk\",\n  coords = list(x = c(malaria_risk = 7, net = 3, income = 4, health = 5,\n                      temperature = 6, resistance = 8.5, eligible = 2, household = 1),\n                y = c(malaria_risk = 2, net = 2, income = 3, health = 1,\n                      temperature = 3, resistance = 2, eligible = 3, household = 2)),\n  labels = c(malaria_risk = \"Risk of malaria\", net = \"Mosquito net\", income = \"Income\",\n             health = \"Health\", temperature = \"Nighttime temperatures\",\n             resistance = \"Insecticide resistance\",\n             eligible = \"Eligible for program\", household = \"Number in household\")\n)\n\nggdag_status(mosquito_dag, use_labels = \"label\", text = FALSE) +\n  guides(fill = \"none\", color = \"none\") +  # Disable the legend\n  theme_dag()\n\n\n\n\n\n\n\n\nThe causal graph above outlines the complete relationship between mosquito net use and risk of malaria. Each node in the DAG is a column in the dataset collected by the researchers, and includes the following:\n\nMalaria risk (malaria_risk): The likelihood that someone in the household will be infected with malaria. Measured on a scale of 0–100, with higher values indicating higher risk.\nMosquito net (net and net_num): A binary variable indicating if the household used mosquito nets.\nEligible for program (eligible): A binary variable indicating if the household is eligible for the free net program.\nIncome (income): The household’s monthly income, in US dollars.\nNighttime temperatures (temperature): The average temperature at night, in Celsius.\nHealth (health): Self-reported healthiness in the household. Measured on a scale of 0–100, with higher values indicating better health.\nNumber in household (household): Number of people living in the household.\nInsecticide resistance (resistance): Some strains of mosquitoes are more resistant to insecticide and thus pose a higher risk of infecting people with malaria. This is measured on a scale of 0–100, with higher values indicating higher resistance.\n\nAccording to the DAG, malaria risk is caused by income, temperatures, health, insecticide resistance, and mosquito net use. People who live in hotter regions, have lower incomes, have worse health, are surrounded by mosquitoes with high resistance to insecticide, and who do not use mosquito nets are at higher risk of contracting malaria than those who do not. Mosquito net use is caused by income, nighttime temperatures, health, the number of people living in the house, and eligibility for the free net program. People who live in areas that are cooler at night, have higher incomes, have better health, have more people in the home, and are eligible for free government nets are more likely to regularly use nets than those who do not. The DAG also shows that eligibility for the free net program is caused by income and household size, since households must meet specific thresholds to qualify.\nFirst, let’s download the dataset, put in a folder named data, and load it:\n\n mosquito_nets.csv\n\n\n# Load the data.\n# It'd be a good idea to click on the \"mosquito_nets.csv\" object in the\n# Environment panel in RStudio to see what the data looks like after you load it\nmosquito_nets &lt;- read_csv(\"data/mosquito_nets.csv\")\n\nWe can use this data to check if the relationships defined by our DAG reflect reality. Recall that d-separation implies that nodes are statistically independent of each other and do not transfer associational information. If you draw the mosquito net DAG with dagitty.net, or if you run impliedConditionalIndependencies() in R, you can see a list of all the implied conditional independencies.\n\nimpliedConditionalIndependencies(mosquito_dag)\n## elgb _||_ hlth | incm\n## elgb _||_ mlr_ | hlth, incm, net, tmpr\n## elgb _||_ rsst\n## elgb _||_ tmpr\n## hlth _||_ hshl\n## hlth _||_ rsst\n## hlth _||_ tmpr\n## hshl _||_ incm\n## hshl _||_ mlr_ | hlth, incm, net, tmpr\n## hshl _||_ rsst\n## hshl _||_ tmpr\n## incm _||_ rsst\n## incm _||_ tmpr\n## net _||_ rsst\n## rsst _||_ tmpr\n\nThe _||_ symbol in the output here is the \\(\\perp\\) symbol, which means “independent of”. The | in the output means “given”.\nIn the interest of space, we will not verify all these implied independencies, but we can test a few of them:\n\n\\(\\text{Health} \\perp \\text{Household members}\\): (Read as “Health is independent of household member count”.) Health should be independent of the number of people in each household. In the data, the two variables should not be correlated. This is indeed the case:\n\ncor(mosquito_nets$health, mosquito_nets$household)\n## [1] 9.8e-05\n\n\\(\\text{Income} \\perp \\text{Insecticide resistance}\\): (Read as “Income is independent of insecticide resistance”.) Income should be independent of insecticide resistance. This is again true:\n\ncor(mosquito_nets$income, mosquito_nets$resistance)\n## [1] 0.014\n\n\\(\\text{Malaria risk} \\perp \\text{Household members}\\ |\\ \\text{Health, Income, Bed net use, Temperature}\\): (Read as “Malaria risk is independent of house member count given health, income, bed net use, and temperature”.) Malaria risk should be independent of the number of household members given similar levels of health, income, mosquito net use, and nighttime temperatures. We cannot use cor() to test this implication, since there are many variables involved, but we can use a regression model to check if the number of household members is significantly related to malaria risk. It is not significant (\\(t = -0.17\\), \\(p = 0.863\\)), which means the two are independent, as expected.\n\nlm(malaria_risk ~ household + health + income + net + temperature,\n   data = mosquito_nets) %&gt;%\n  broom::tidy()\n## # A tibble: 6 × 5\n##   term        estimate std.error statistic   p.value\n##   &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n## 1 (Intercept)  76.2      0.966      78.9   0        \n## 2 household    -0.0155   0.0893     -0.173 8.63e-  1\n## 3 health        0.148    0.0107     13.9   9.75e- 42\n## 4 income       -0.0751   0.00104   -72.6   0        \n## 5 netTRUE     -10.4      0.266     -39.2   2.63e-241\n## 6 temperature   1.01     0.0310     32.5   1.88e-181\n\n\nWe can check all the other conditional independencies to see if the DAG captures the reality of the full system of factors that influence mosquito net use and malaria risk. If there are substantial and significant correlations between nodes that should be independent, there is likely an issue with the specification of the DAG. Return to the theory of how the phenomena are generated and refine the DAG more.\n\n\nMosquito net adjustment sets\nThere is a direct path between mosquito net use and the risk of malaria, but the effect is not causally identified due to several other open paths. We can either list out all the paths and find which open paths have arrows pointing backwards into the mosquito net node (run paths(mosquito_dag) to see these results), or we can let R find the appropriate adjustment sets automatically:\n\nadjustmentSets(mosquito_dag)\n## { health, income, temperature }\n\nBased on the relationships between all the nodes in the DAG, adjusting for health, income, and temperature is enough to close all backdoors and identify the relationship between net use and malaria risk. Importantly, we do not need to worry about any of the nodes related to the government program for free nets, since those nodes are not d-connected to malaria risk. We only need to worry about confounding relationships.\nWe can confirm this graphically with ggdag_adjustment_set():\n\nggdag_adjustment_set(mosquito_dag, shadow = TRUE,\n                     use_labels = \"label\", text = FALSE) +\n  theme_dag()"
  },
  {
    "objectID": "example/index.html",
    "href": "example/index.html",
    "title": "Code examples",
    "section": "",
    "text": "Visit this section after you have finished the readings and lecture videos. It contains fully annotated R code and other supplementary information and it will be indispensable as you work on your problem sets and project.\nMany sections also contain videos of me live coding the examples so you can see what it looks like to work with R in real time. You’ll notice me make all sorts of little errors, which is totally normal—everyone does!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Analisi Dati in Excel2R",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "resource/citations.html",
    "href": "resource/citations.html",
    "title": "Citations and bibliography",
    "section": "",
    "text": "You can download a BibTeX file of all the non-web-based readings in the course:\n\n references.bib\n\nYou can open the file in BibDesk on macOS, JabRef on Windows, or Zotero or Mendeley online."
  },
  {
    "objectID": "resource/data.html",
    "href": "resource/data.html",
    "title": "Data",
    "section": "",
    "text": "There are a ton of places to find data related to public policy and administration (as well as data on pretty much any topic you want) online:\n\nData is Plural newsletter: Jeremy Singer-Vine sends a weekly newsletter of the most interesting public datasets he’s found. You should subscribe to it. He also has an archive of all the datasets he’s highlighted.\nGoogle Dataset Search: Google indexes thousands of public datasets; search for them here.\nKaggle: Kaggle hosts machine learning competitions where people compete to create the fastest, most efficient, most predictive algorithms. A byproduct of these competitions is a host of fascinating datasets that are generally free and open to the public. See, for example, the European Soccer Database, the Salem Witchcraft Dataset or results from an Oreo flavors taste test.\n360Giving: Dozens of British foundations follow a standard file format for sharing grant data and have made that data available online.\nUS City Open Data Census: More than 100 US cities have committed to sharing dozens of types of data, including data about crime, budgets, campaign finance, lobbying, transit, and zoning. This site from the Sunlight Foundation and Code for America collects this data and rates cities by how well they’re doing.\nPolitical science and economics datasets: There’s a wealth of data available for political science- and economics-related topics:\n\nFrançois Briatte’s extensive curated lists: Includes data from/about intergovernmental organizations (IGOs), nongovernmental organizations (NGOs), public opinion surveys, parliaments and legislatures, wars, human rights, elections, and municipalities.\nThomas Leeper’s list of political science datasets: Good short list of useful datasets, divided by type of data (country-level data, survey data, social media data, event data, text data, etc.).\nErik Gahner’s list of political science datasets: Huge list of useful datasets, divided by topic (governance, elections, policy, political elites, etc.)"
  },
  {
    "objectID": "resource/index.html",
    "href": "resource/index.html",
    "title": "Resources",
    "section": "",
    "text": "I have included a bunch of extra resources and guides related to causal inference, program evaluation, R, data, and other relevant topics. Enjoy!"
  }
]